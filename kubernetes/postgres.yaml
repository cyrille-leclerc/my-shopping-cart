---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
data:
  init.sql: |
    -- Create extension in the current database (ecommerce)
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
    
    -- Also create extension in postgres database
    \c postgres
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    app.kubernetes.io/name: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:17.6-alpine
          args: ["-c", "shared_preload_libraries=pg_stat_statements"]
          env:
            - name: POSTGRES_PASSWORD
              value: ecommerce
            - name: POSTGRES_USER
              value: ecommerce
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: postgres-init
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: postgres-init
          configMap:
            name: postgres-init
      restartPolicy: Always
