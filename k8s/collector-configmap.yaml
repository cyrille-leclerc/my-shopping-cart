apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
data:
  otel-collector-config.yaml: |- 
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      filelog/fraud-detection-raw:
        include:
          - /var/log/pods/*/anti-fraud/*.log
        exclude:
          # Exclude logs from all containers named otel-collector
          - /var/log/pods/*/lgtm/*.log        
        operators:
        - id: container-parser
          type: container
        - id: regex_parser
          type: regex_parser
          regex: '(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}\+\d{2}:\d{2})\s*(?P<level>\S*)\s*(?P<pid>\d*)\s*--- \[(?P<thread>\S*)\] (?P<logger>\S*)\s*: (?P<message>.*) - trace_id=(?P<trace_id>[A-Za-z0-9]*), span_id=(?P<span_id>[A-Za-z0-9]*)'
          body: attributes.message
          timestamp:
            # TODO
            parse_from: attributes.timestamp
            # logback pattern: yyyy-MM-dd'T'HH:mm:ss.SSSXXX -- example=2024-04-17T10:10:47.715+02:00
            layout: '%Y-%m-%dT%H:%M:%S.%L%j'
          severity:
            parse_from: attributes.level
          trace:
            trace_id:
              parse_from: attributes.trace_id
            span_id:
              parse_from: attributes.span_id
          scope_name:
            parse_from: attributes.logger
        - id: move_thread_name
          type: move
          from: attributes.thread
          to: attributes["thread.name"]
        - id: remove_logger_name
          type: remove
          field: attributes.logger
        - id: remove_timestamp
          type: remove
          field: attributes.timestamp
        - id: remove_level
          type: remove
          field: attributes.level
        - id: remove_span_id
          type: remove
          field: attributes.span_id
        - id: remove_trace_id
          type: remove
          field: attributes.trace_id
        - id: remove_message
          type: remove
          field: attributes.message
        # TODO handle exception stack trace
        #- type: stdout
        resource:
          service.name: fraud-detection
          service.namespace: raw_logs
          deployment.environment: production        

        
  
    processors:
      batch:
      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
            - k8s.cluster.uid
        pod_association:
          - sources:
             - from: resource_attribute
               name: k8s.pod.uid
             - from: resource_attribute
               name: k8s.pod.ip
             - from: connection        
      resourcedetection:
        detectors: ["env", "system"]
        override: false  
    
    exporters:
      otlphttp/metrics:
        endpoint: http://localhost:9090/api/v1/otlp
      otlphttp/traces:
        endpoint: http://localhost:4418
      otlphttp/logs:
        endpoint: http://localhost:3100/otlp
      logging/metrics:
        verbosity: detailed
      logging/traces:
        verbosity: detailed
      logging/logs:
        verbosity: detailed
      nop:
  
    service:
      pipelines:
        traces:
          receivers: [ otlp ]
          processors: [ batch ]
          exporters: [ otlphttp/traces ]
        metrics:
          receivers: [ otlp ]
          processors: [ batch ]
          exporters: [ otlphttp/metrics ]
        logs/otlp:
          receivers: [ otlp ]
          processors: [ batch ]
          exporters: [ nop ]
        logs/k8s-stdout:
          receivers: [ filelog/fraud-detection-ndjson ]
          processors: [ k8sattributes, batch ]
          exporters: [ otlphttp/logs, logging/logs ]
          
          
