#!/usr/bin/env bash
# set -x

##########################################################################################
# PARENT DIRECTORY
# code copied from Tomcat's `catalina.sh`
##########################################################################################
# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=$(ls -ld "$PRG")
  link=$(expr "$ls" : '.*-> \(.*\)$')
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=$(dirname "$PRG")/"$link"
  fi
done

# Get standard environment variables
PRGDIR=$(dirname "$PRG")

# LOAD ENVIRONMENT VARIABLES
if [ -r "$PRGDIR/../setenv.sh" ]; then
  . "$PRGDIR/../setenv.sh"
else
  . "$PRGDIR/../setenv.default.sh"
fi
if [ -r "$PRGDIR/setenv.sh" ]; then
  . "$PRGDIR/setenv.sh"
fi

export OPEN_TELEMETRY_AGENT_HOME=$PRGDIR/../.otel
mkdir -p "$OPEN_TELEMETRY_AGENT_HOME"

##########################################################################################
# DOWNLOAD OPEN TELEMETRY AGENT IF NOT FOUND
# code copied from Maven Wrappers's mvnw`
##########################################################################################
export OPEN_TELEMETRY_AGENT_JAR=$OPEN_TELEMETRY_AGENT_HOME/opentelemetry-javaagent-$OPEN_TELEMETRY_AGENT_VERSION.jar
if [ -r "$OPEN_TELEMETRY_AGENT_JAR" ]; then
    echo "Found $OPEN_TELEMETRY_AGENT_JAR"
else
    echo "Couldn't find $OPEN_TELEMETRY_AGENT_JAR, downloading it ..."
    jarUrl="https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v$OPEN_TELEMETRY_AGENT_VERSION/opentelemetry-javaagent.jar"

    if command -v wget > /dev/null; then
        wget "$jarUrl" -O "$OPEN_TELEMETRY_AGENT_JAR"
    elif command -v curl > /dev/null; then
        curl -L --max-redirs 5 -o "$OPEN_TELEMETRY_AGENT_JAR" "$jarUrl"
    else
        echo "FAILURE: OpenTelemetry agent not found and  none of curl and wget found"
        exit 1;
    fi
fi

export PYROSCOPE_AGENT_HOME=$PRGDIR/../.pyroscope
mkdir -p "$PYROSCOPE_AGENT_HOME"

##########################################################################################
# DOWNLOAD PYROSCOPE AGENT IF NOT FOUND
# code copied from Maven Wrappers's mvnw`
##########################################################################################
export PYROSCOPE_AGENT_JAR=$PYROSCOPE_AGENT_HOME/pyroscope-javaagent-$PYROSCOPE_AGENT_VERSION.jar
if [ -r "$PYROSCOPE_AGENT_JAR" ]; then
    echo "Found $PYROSCOPE_AGENT_JAR"
else
    echo "Couldn't find $PYROSCOPE_AGENT_JAR, downloading it ..."
    jarUrl="https://github.com/grafana/pyroscope-java/releases/download/v$PYROSCOPE_AGENT_VERSION/pyroscope.jar"

    if command -v wget > /dev/null; then
        wget "$jarUrl" -O "$PYROSCOPE_AGENT_JAR"
    elif command -v curl > /dev/null; then
        curl -L --max-redirs 5 -o "$PYROSCOPE_AGENT_JAR" "$jarUrl"
    else
        echo "FAILURE: pyroscope agent not found and  none of curl and wget found"
        exit 1;
    fi
fi

##########################################################################################
# DOWNLOAD PYROSCOPE OTEL AGENT EXTENSION IF NOT FOUND
# code copied from Maven Wrappers's mvnw`
##########################################################################################
export PYROSCOPE_OTEL_AGENT_EXTENSION_JAR=$PYROSCOPE_AGENT_HOME/pyroscope-otel-agent-extension-$PYROSCOPE_OTEL_AGENT_EXTENSION_VERSION.jar
if [ -r "$PYROSCOPE_OTEL_AGENT_EXTENSION_JAR" ]; then
    echo "Found $PYROSCOPE_OTEL_AGENT_EXTENSION_JAR"
else
    echo "Couldn't find $PYROSCOPE_OTEL_AGENT_EXTENSION_JAR, downloading it ..."
    jarUrl="https://repo1.maven.org/maven2/io/pyroscope/otel/$PYROSCOPE_OTEL_AGENT_EXTENSION_VERSION/otel-$PYROSCOPE_OTEL_AGENT_EXTENSION_VERSION.jar"

    if command -v wget > /dev/null; then
        wget "$jarUrl" -O "$PYROSCOPE_OTEL_AGENT_EXTENSION_JAR"
    elif command -v curl > /dev/null; then
        curl -L --max-redirs 5 -o "$PYROSCOPE_OTEL_AGENT_EXTENSION_JAR" "$jarUrl"
    else
        echo "FAILURE: pyroscope otel agent extension not found and  none of curl and wget found"
        exit 1;
    fi
fi

# $PRGDIR/../mvnw -DskipTests package

echo "####################"
echo "# START FRONTEND $INSTANCE_NUMBER #"
echo "####################"
echo ""
echo "OTEL_EXPORTER_OTLP_ENDPOINT: $OTEL_EXPORTER_OTLP_ENDPOINT"
echo "OTEL_EXPORTER_OTLP_PROTOCOL: $OTEL_EXPORTER_OTLP_PROTOCOL"

INSTANCE_NUMBER=1

# cloud.account.id	"grafanalabs-prod"
# cloud.availability_zone=us-central1-a"
# cloud.provider=gcp"
#
# container.id	"5cc7dd9ecf384635129e7ff7b4a2dd239c803a4f04f62e85386425d31b40de08"
# container.name	""

# host.arch	"amd64"
# host.id	"5929043986934855635"
# host.name	"gke-prod-us-central-0-otel-n2s4-1-f04acab8-dxqq.c.grafanalabs-prod.internal"

# k8s.cluster.name	"prod-us-central-0"
# k8s.namespace.name	""
# k8s.node.name=gke-prod-us-central-0-otel-n2s4-1-f04acab8-dxqq"
# k8s.pod.name=opentelemetry-frontend-5b7b9db9ff-sh828"


OTEL_RESOURCE_ATTRIBUTES="service.name=frontend,service.namespace=$SERVICE_NAMESPACE,service.version=1.1,deployment.environment.name=$DEPLOYMENT_ENVIRONMENT_NAME,service.instance.id=instance-$INSTANCE_NUMBER"
OTEL_RESOURCE_ATTRIBUTES="$OTEL_RESOURCE_ATTRIBUTES,host.arch=amd64,host.id=5929043986934855635,host.name=gke-prod-us-central-0-otel-n2s4-1-f04acab8-dxqq-$INSTANCE_NUMBER.mycompany-prod.internal"
OTEL_RESOURCE_ATTRIBUTES="$OTEL_RESOURCE_ATTRIBUTES,k8s.cluster.name=prod-us-central-0,k8s.namespace.name=ecommerce,k8s.node.name=gke-prod-us-central-0-otel-n2s4-1-f04acab8-dxqq-$INSTANCE_NUMBER,k8s.pod.name=ecommerce-frontend-5b7b9db9ff-sh828,k8s.pod.uid=5b7b9db9ff-sh828"
OTEL_RESOURCE_ATTRIBUTES="$OTEL_RESOURCE_ATTRIBUTES,cloud.account.id=mycompany-prod,cloud.availability_zone=us-central1-a,cloud.provider=gcp"
# OTEL_RESOURCE_ATTRIBUTES="$OTEL_RESOURCE_ATTRIBUTES,mycie.env=$DEPLOYMENT_ENVIRONMENT_NAME"
export OTEL_RESOURCE_ATTRIBUTES

# /!\ PYROSCOPE_LABELS doesn't support `.` but supports `_`
# /!\ `_` in labels doesn't work with Pyroscope Tags explorer
export PYROSCOPE_APPLICATION_NAME="frontend"
export PYROSCOPE_LABELS="environment=$DEPLOYMENT_ENVIRONMENT_NAME,namespace=$SERVICE_NAMESPACE,instance=instance-$INSTANCE_NUMBER"

# https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/logback/logback-appender-1.0/javaagent
# https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/log4j/log4j-appender-2.17/javaagent
# -Dotel.instrumentation.log4j-appender.experimental-log-attributes=true

java -javaagent:$PRGDIR/../.otel/opentelemetry-javaagent-$OPEN_TELEMETRY_AGENT_VERSION.jar \
     -Dotel.javaagent.extensions=$PRGDIR/../otel-javaagent-extensions/target/otel-javaagent-extensions-1.1-SNAPSHOT.jar \
     -Dotel.instrumentation.logback-appender.experimental-log-attributes=true \
     -Dotel.instrumentation.micrometer.base-time-unit=s \
     -Dotel.semconv-stability.opt-in=http,database \
     -Dserver.port=8080 \
     -jar target/frontend-1.1-SNAPSHOT.jar

#      -javaagent:$PYROSCOPE_AGENT_JAR \
# otel-prrofiling-java doesn't work for me :-(
#     -Dotel.javaagent.extensions=$PYROSCOPE_OTEL_AGENT_EXTENSION_JAR \
