

# app.datasource.jdbcUrl=jdbc:h2:mem:ecommercedb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false;MODE=PostgreSQL
# app.datasource.username=sa
# app.datasource.password=

# spring.jpa.show-sql=true

spring.jpa.open-in-view=false

database=postgresql
spring.datasource.url=jdbc:postgresql://localhost:5432/my_shopping_cart
spring.datasource.username=my_shopping_cart
spring.datasource.password=my_shopping_cart

# validate: validate the schema, makes no changes to the database.
# update: update the schema.
# create: creates the schema, destroying previous data.
# create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped.
# none: does nothing with the schema, makes no changes to the database
spring.jpa.hibernate.ddl-auto=update

# Redis
#spring.redis.host=localhost
#spring.redis.port=6379
spring.redis.timeout=2000


toxiproxy.hostname=127.0.0.1
toxiproxy.port=8474

antiFraudService.baseUrl=http://localhost:8081
checkoutService.grpcEndpoint=localhost:50051
management.endpoints.web.exposure.include=*

server.tomcat.accesslog.enabled= true

logging.file.name=/usr/local/var/log/my-shopping-cart/frontend.log

server.tomcat.accesslog.enabled=true
#server.tomcat.accesslog.buffered=true
server.tomcat.accesslog.directory=/usr/local/var/log/my-shopping-cart/
server.tomcat.accesslog.prefix=frontend_access