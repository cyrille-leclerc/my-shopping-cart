#!/usr/bin/env bash
set -x

##########################################################################################
# PARENT DIRECTORY
# code copied from Tomcat's `catalina.sh`
##########################################################################################
# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=$(ls -ld "$PRG")
  link=$(expr "$ls" : '.*-> \(.*\)$')
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=$(dirname "$PRG")/"$link"
  fi
done

# Get standard environment variables
PRGDIR=$(dirname "$PRG")

# LOAD ENVIRONMENT VARIABLES
if [ -r "$PRGDIR/../setenv.sh" ]; then
  . "$PRGDIR/../setenv.sh"
else
  . "$PRGDIR/../setenv.default.sh"
fi
if [ -r "$PRGDIR/setenv.sh" ]; then
  . "$PRGDIR/setenv.sh"
fi

export OPEN_TELEMETRY_AGENT_HOME=$PRGDIR/../.otel
mkdir -p "$OPEN_TELEMETRY_AGENT_HOME"

##########################################################################################
# DOWNLOAD OPEN TELEMETRY AGENT IF NOT FOUND
# code copied from Maven Wrappers's mvnw`
##########################################################################################
export OPEN_TELEMETRY_AGENT_JAR=$OPEN_TELEMETRY_AGENT_HOME/opentelemetry-javaagent-$OPEN_TELEMETRY_AGENT_VERSION.jar
if [ -r "$OPEN_TELEMETRY_AGENT_JAR" ]; then
    echo "Found $OPEN_TELEMETRY_AGENT_JAR"
else
    echo "Couldn't find $OPEN_TELEMETRY_AGENT_JAR, downloading it ..."
    jarUrl="https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v$OPEN_TELEMETRY_AGENT_VERSION/opentelemetry-javaagent.jar"

    if command -v wget > /dev/null; then
        wget "$jarUrl" -O "$OPEN_TELEMETRY_AGENT_JAR"
    elif command -v curl > /dev/null; then
        curl -L --max-redirs 5 -o "$OPEN_TELEMETRY_AGENT_JAR" "$jarUrl"
    else
        echo "FAILURE: OpenTelemetry agent not found and  none of curl and wget found"
        exit 1;
    fi
fi

export PYROSCOPE_AGENT_HOME=$PRGDIR/../.pyroscope
mkdir -p "$PYROSCOPE_AGENT_HOME"

##########################################################################################
# DOWNLOAD PYROSCOPE AGENT IF NOT FOUND
# code copied from Maven Wrappers's mvnw`
##########################################################################################
export PYROSCOPE_AGENT_JAR=$PYROSCOPE_AGENT_HOME/pyroscope-javaagent-$PYROSCOPE_AGENT_VERSION.jar
if [ -r "$PYROSCOPE_AGENT_JAR" ]; then
    echo "Found $PYROSCOPE_AGENT_JAR"
else
    echo "Couldn't find $PYROSCOPE_AGENT_JAR, downloading it ..."
    jarUrl="https://github.com/grafana/pyroscope-java/releases/download/v$PYROSCOPE_AGENT_VERSION/pyroscope.jar"

    if command -v wget > /dev/null; then
        wget "$jarUrl" -O "$PYROSCOPE_AGENT_JAR"
    elif command -v curl > /dev/null; then
        curl -L --max-redirs 5 -o "$PYROSCOPE_AGENT_JAR" "$jarUrl"
    else
        echo "FAILURE: pyroscope agent not found and  none of curl and wget found"
        exit 1;
    fi
fi


$PRGDIR/../mvnw -DskipTests package


echo "#########################"
echo "# START FRAUD DETECTION #"
echo "#########################"
echo ""
echo "OTEL_EXPORTER_OTLP_ENDPOINT: $OTEL_EXPORTER_OTLP_ENDPOINT"
echo "OTEL_EXPORTER_OTLP_PROTOCOL: $OTEL_EXPORTER_OTLP_PROTOCOL"
echo ""


OTEL_RESOURCE_ATTRIBUTES="service.name=fraud-detection,service.namespace=$SERVICE_NAMESPACE,service.version=1.1,deployment.environment=$DEPLOYMENT_ENVIRONMENT,service.instance.id=instance-1"
OTEL_RESOURCE_ATTRIBUTES="$OTEL_RESOURCE_ATTRIBUTES,mycie.env=production"

export OTEL_RESOURCE_ATTRIBUTES
export OTEL_PROPAGATORS="tracecontext,baggage"

# /!\ PYROSCOPE_LABELS doesn't support `.` but supports `_`
# /!\ `_` in labels doesn't work with Pyroscope Tags explorer
export PYROSCOPE_APPLICATION_NAME="fraud-detection"
export PYROSCOPE_LABELS="environment=$DEPLOYMENT_ENVIRONMENT,namespace=$SERVICE_NAMESPACE,instance=instance-1,version=1.1"

java -javaagent:$OPEN_TELEMETRY_AGENT_JAR \
     -javaagent:$PYROSCOPE_AGENT_JAR \
     -Dserver.port=8081 \
     -Dotel.instrumentation.logback-appender.experimental-log-attributes=true \
     -Dotel.instrumentation.micrometer.base-time-unit=s \
     -Dotel.semconv-stability.opt-in=http/dup \
     -jar target/fraud-detection-1.1-SNAPSHOT.jar