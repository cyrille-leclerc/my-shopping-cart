// INGEST OPEN TELEMETRY OTLP

otelcol.receiver.otlp "default" {
	// https://grafana.com/docs/agent/latest/flow/reference/components/otelcol.receiver.otlp/
	// NOTE ADD OTEL COLLECTOR CONFIG FOR LOKI (WAITING FOR GRAFANA AGENT TO SUPPORT otelcol.processor.resource)
	// processors:
	//   resource:
	//     attributes:
	//     - action: insert
	//       key: service_name
	//       from_attribute: service.name
	//     - action: insert
	//       key: service_namespace
	//       from_attribute: service.namespace
	//     - action: insert
	//       key: deployment_environment
	//       from_attribute: deployment.environment
	//     - action: insert
	//       key: loki.resource.labels
	//       value: service_namespace, service_name, deployment_environment
	grpc {
		endpoint = "0.0.0.0:4318"
	}

	output {
		metrics = [otelcol.processor.batch.default.input]
		logs    = [otelcol.processor.batch.default.input]
		traces  = [otelcol.processor.batch.default.input]
	}
}

otelcol.processor.batch "default" {
	// https://grafana.com/docs/agent/latest/flow/reference/components/otelcol.processor.batch/
	output {
		metrics = [otelcol.processor.memory_limiter.default.input]
		logs    = [otelcol.processor.memory_limiter.default.input]
		traces  = [otelcol.processor.memory_limiter.default.input]
	}
}

otelcol.processor.memory_limiter "default" {
	// https://grafana.com/docs/agent/latest/flow/reference/components/otelcol.processor.memory_limiter/
	check_interval = "1s"

	limit = "150MiB" // alternatively, set `limit_percentage` and `spike_limit_percentage`

	output {
		metrics = [otelcol.exporter.prometheus.default.input]
		logs    = [otelcol.exporter.loki.default.input]
		traces  = [otelcol.exporter.otlp.grafana_cloud_tempo.input]
	}
}

otelcol.exporter.loki "default" {
	// https://grafana.com/docs/agent/latest/flow/reference/components/otelcol.exporter.loki/
	forward_to = [loki.write.default.receiver]
}

otelcol.exporter.prometheus "default" {
	// https://grafana.com/docs/agent/latest/flow/reference/components/otelcol.exporter.prometheus/
	forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.remote_write "default" {
	// https://grafana.com/docs/agent/latest/flow/reference/components/prometheus.remote_write/
	endpoint {
		url = env("PROMETHEUS_URL")

		basic_auth {
			username = env("PROMETHEUS_USERNAME")
			password = env("PROMETHEUS_PASSWORD")
		}
	}
}

loki.write "default" {
	// https://grafana.com/docs/agent/latest/flow/reference/components/loki.write/
	endpoint {
		url = env("LOKI_URL")

		basic_auth {
			username = env("LOKI_USERNAME")
			password = env("LOKI_PASSWORD")
		}
	}
}

otelcol.exporter.otlp "grafana_cloud_tempo" {
	// https://grafana.com/docs/agent/latest/flow/reference/components/otelcol.exporter.otlp/
	client {
		endpoint = env("TEMPO_ENDPOINT")
		auth     = otelcol.auth.basic.grafana_cloud_tempo.handler
	}
}

otelcol.auth.basic "grafana_cloud_tempo" {
	// https://grafana.com/docs/agent/latest/flow/reference/components/otelcol.auth.basic/
	username = env("TEMPO_USERNAME")
	password = env("TEMPO_PASSWORD")
}